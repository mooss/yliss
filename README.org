* Yliss

This is a procedural planet generator written in literate C++.
Here is a planet generated with this project:
[[file:images/screencaps/gfgocta_cel_without_outlines.jpg]]

For now the only way to make it run is to use an up-to-date version of Emacs to execute the relevant Org mode code blocks.
There is probably a bunch of other constraints, like having a suitable version of GLFW installed.

** Compilation

Compiling this project requires a recent GCC compiler, a working glfw3 installation and a working Docker installation setup to run without sudo (see https://docs.docker.com/engine/install/linux-postinstall/).

Initialize the dependencies:
#+begin_src bash
make init
#+end_src

Compile and run the partial cel shading implementation:
#+begin_src bash
make run/partial-cel-shading # Use build/partial-cel-shading to only compile.
#+end_src

** Documents generation

Currently, pdfs can be generated with =make pdf=.

While those pdfs read ok, document generation is missing some features.
Some work is still needed either in the form of pandoc filters or of custom pre-processing steps.
Notable missing features are:
 - Display code block names.
 - Display code blocks dependencies.
 - Optionally comment noweb inclusions.

Here are features that have been implemented:
 - Export some code blocks within minipages.

** Files included from other projects

Some files from external dependencies are included directly in this repository.
The projects from which files were borrowed are the following:
 - glad (https://glad.dav1d.de) :: Since this is an OpenGL loader generator, I figured that the best way to use it would be to directly include the generated code.

** Sources

 - https://learnopengl.com :: for most things related to OpenGL.
 - https://github.com/mooss/godefarig :: a similar project I did a few years ago.
