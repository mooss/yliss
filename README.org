* Yliss

[[file:images/octahedron_logo.png]]

This is a procedural planet generator written in litterate C++.
Here is a planet generated with this project:
[[file:images/screencaps/gfgocta_phong.png]]

For now the only way to make it run is to use an up-to-date version of Emacs to execute the relevant Org mode code blocks.
There is probably a bunch of other constraints, like having a suitable version of GLFW installed.

** Files included from other projects

Some files from external dependencies are included directly in this repository.
The projects from which files were borrowed are the following:
 - glad (https://glad.dav1d.de) :: Since this is an OpenGL loader generator, I figured that the best way to use it would be to directly include the generated code.

** Documents generation

Currently, pdfs can be generated with =make pdf=.

While those pdfs read ok, document generation is missing some features.
Some work is still needed either in the form of pandoc filters or of custom pre-processing steps.
Notable missing features are:
 - Display code block names.
 - Display code blocks dependencies.
 - Optionally comment noweb inclusions.

Here are features that have been implemented:
 - Export some code blocks within minipages.

** TODO Tangler

A tangler is a program that can extract source code blocks from a literate document and gather (tangle) them into their destination file.

This project needs one, ideally one that is written in C/C++ without external dependencies and one that supports =noweb-ref= so that rules out Worgle at least.

Currently lithel's =include.pl= has been adapted to perform some tangling duties but this whole script is an ugly hack that will come back to haunt me.

** Sources

 - https://learnopengl.com :: for most things related to OpenGL.
 - https://github.com/mooss/godefarig :: a similar project I did a few years ago.
